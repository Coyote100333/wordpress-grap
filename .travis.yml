language: php

sudo: false

notifications:
  email:
    on_success: never
    on_failure: never

branches:
  only:
    - master
    - develop

cache:
  apt: true
  directories:
  - vendor
  - $HOME/.composer/cache

# Set the global environment variables
env:
  global:
    - WP_CORE_DIR: /tmp/wordpress
    - WP_VERSION: latest
    - COVERAGE: false

# Set the various variables for the environments to test
matrix:
  include:
    - php: 5.5
      env: WP_MULTISITE=0 PHP_UNIT_VERSION=4.8
    - php: 5.6
      env: WP_MULTISITE=0 PHP_UNIT_VERSION=4.8
    - php: 7.0
      env: WP_MULTISITE=0 PHP_UNIT_VERSION=5.7
    - php: 7.1
      env: WP_MULTISITE=0 PHP_UNIT_VERSION=6.3 COVERAGE=true
    - php: 5.5
      env: WP_MULTISITE=1 PHP_UNIT_VERSION=4.8
    - php: 5.6
      env: WP_MULTISITE=1 PHP_UNIT_VERSION=4.8
    - php: 7.0
      env: WP_MULTISITE=1 PHP_UNIT_VERSION=5.7
    - php: 7.1
      env: WP_MULTISITE=1 PHP_UNIT_VERSION=6.3
  fast_finish: true

install:
  - cd $TRAVIS_BUILD_DIR
  # Install composer packages, will also trigger dump-autoload
  - composer install
  # Install WP CLI
  - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
  - chmod +x wp-cli.phar
  - sudo mv wp-cli.phar /usr/local/bin/wp

before_script:
  # Install WordPress and the Test Suite
  - bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
  # Update composer
  - composer self-update
  # Install PHPUnit, using the specified version for the PHP version we're running
  - composer require phpunit/phpunit:$PHP_UNIT_VERSION
  - composer install --no-interaction
  # Make a directory for storing logs
  - mkdir -p build/logs
  - ls -al

script:
 # Execute unit tests for AJAX
 - vendor/bin/phpunit --group ajax
 # Execute the "rest" of the unit tests
 - if [ $COVERAGE == "true" ];
   then vendor/bin/phpunit --coverage-clover build/logs/clover.xml
   else vendor/bin/phpunit
   fi

after_success:
  # Install coveralls.phar
  - wget -c -nc --retry-connrefused --tries=0 https://github.com/satooshi/php-coveralls/releases/download/v1.0.1/coveralls.phar
  - chmod +x coveralls.phar
  - php coveralls.phar --version
  # Install GraphQL Schema Linter
  - npm install -g graphql-schema-linter
  # Upload coverage to coveralls
  - travis_retry php coveralls.phar -v
  # Move to the WordPress Install
  - cd $WP_CORE_DIR
  # Generate the Static Schema
  - wp graphql generate-static-schema
  # Lint the Schema
  - graphql-schema-linter $WP_ROOT/wp-content/plugins/wp-graphql
